import asyncio

from aiogram import types

from bot_tg.loader import dp, bot
from buttons.inlines import general_info_markup

from db_work.dao.models.model import session
from db_work.service.notes_service import NotesService
from db_work.service.users_service import UsersService


users_service = UsersService(session)
notes_service = NotesService(session)


@dp.message_handler(lambda message: message.text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è")
async def general_inf(message: types.Message):
    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)

    await bot.send_message(
        chat_id=message.chat.id,
        text="–í —Ü–µ–Ω—Ç—Ä–µ –µ—Å—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É –∏–ª–∏ –∫—É—Ä—Å—ã –¥–ª—è —Ç–µ—Ö, –∫–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã —Ç–µ–º—ã –ª–∏—á–Ω–æ—Å—Ç–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è , –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –≤ –≥—Ä—É–ø–ø–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Å—Ä–µ–¥–µ.\n "
             "–í—ã–±–∏—Ä–∞–π —Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –∏–Ω—Ç–µ—Ä–µ—Å–µ–ΩüîΩüîΩüîΩ",
        parse_mode='html',
        reply_markup=general_info_markup
    )


@dp.message_handler(lambda message: message.text == "–ú–æ–∏ –∑–∞–ø–∏—Å–∏", state="*")
async def my_notes(message: types.Message):
    await asyncio.sleep(0.5)

    try:
        await bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)
    except Exception as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)

    user = users_service.get_user_by_tg_id(message.from_user.id)

    user_notes = user.notes
    list_user_notes = []
    for note in user_notes:
        list_user_notes.append(f"Note ID: {note.id}, Date: {note.date}, Time: {note.time}, Category: {note.category}, Sub-category: {note.sub_category}")

    await bot.send_message(
        chat_id=message.chat.id,
        text=list_user_notes,
        parse_mode='html'
    )
