import datetime
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.callback_data import CallbackData

cd = CallbackData("ikd", "action")


# General Info Keyboard Markup
general_info_markup = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', callback_data=cd.new("ind_cons"))],
    [InlineKeyboardButton('–ú–∏–Ω–∏-–≥—Ä—É–ø–ø—ã', callback_data=cd.new("mini_group"))],
    [InlineKeyboardButton('–¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥—Ä—É–ø–ø—ã', callback_data=cd.new("them_group"))]
])

general_info_markup_admin = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏', callback_data="admin_indCons")],
    [InlineKeyboardButton('–ú–∏–Ω–∏-–≥—Ä—É–ø–ø—ã', callback_data="admin_miniGroup")],
    [InlineKeyboardButton('–¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≥—Ä—É–ø–ø—ã', callback_data="admin_themGroup")]
])

# This Week's Keyboard Markup
today = datetime.date.today()
current_month = today.month

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–æ–ø–æ–∫ —Å –¥–∞—Ç–æ–π –∏–ª–∏ "-"
this_weeks_button_list = []
cnt = 0
day_of_week_short = {
    0: "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫",
    1: "–í—Ç–æ—Ä–Ω–∏–∫",
    2: "–°—Ä–µ–¥–∞",
    3: "–ß–µ—Ç–≤–µ—Ä–≥",
    4: "–ü—è—Ç–Ω–∏—Ü–∞",
    5: "–°—É–±–±–æ—Ç–∞"
}
while cnt <= 7:
    date = today + datetime.timedelta(days=cnt)
    day_num = date.weekday()

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è (day_num == 6)
    if day_num != 6:
        this_weeks_button_list.append(InlineKeyboardButton(f"üìÜ{day_of_week_short[day_num]} {date.strftime('%d.%m')}",
                                                           callback_data=f"date_{date.strftime('%d.%m.%Y')}"))
    cnt += 1

back_button = InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data="back")
this_weeks_button_list.append(back_button)

this_weeks_button_markup = InlineKeyboardMarkup(row_width=1).add(*this_weeks_button_list)


subgroup_them = InlineKeyboardMarkup(row_width=1, inline_keyboard=[
    [InlineKeyboardButton('–ü—Ä–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è', callback_data=cd.new("about_relat"))],
    [InlineKeyboardButton('–°–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è', callback_data=cd.new("self_realization"))],
    [InlineKeyboardButton('–ü—Ä–æ —Ñ–∏–Ω–∞–Ω—Å—ã', callback_data=cd.new("finance"))],
    [InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data="back")]
])



enroll = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è', callback_data=cd.new("enroll"))],
    [InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data="back")]
])

enroll_them_mini = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('–ó–∞–ø–∏—Å–∞—Ç—å—Å—è', callback_data=cd.new("enroll_them_mini"))],
    [InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data="back")]
])

connect = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton('–°–≤—è–∑–∞—Ç—å—Å—è —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º', url="https://t.me/Evgeniya_drugoy_vzglyad")]
])


next_ = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton("‚óÄÔ∏è", callback_data='next_0_back'), InlineKeyboardButton("‚ñ∂Ô∏è", callback_data='next_0_next')],
    [InlineKeyboardButton("–ó–∞–ø–∏—Å–∞—Ç—å—Å—è", callback_data='next_0_signup')],
    [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data='back')]
])

choose_time = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton("‚óÄÔ∏è", callback_data='choose_0_back'), InlineKeyboardButton("‚ñ∂Ô∏è", callback_data='choose_0_next')],
    [InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å", callback_data='choose_0_choose')]
])

create_look_slots = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton("–°–æ–∑–¥–∞—Ç—å –∏–≤–µ–Ω—Ç", callback_data=cd.new('create_slots'))],
    [InlineKeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ—É –ø—Ä–æ –≤—Å—Ç—Ä–µ—á–∏", callback_data=cd.new('look_slots'))]
])

free_occupied_slots = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton("–°–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã", callback_data=cd.new('free_slots'))],
    [InlineKeyboardButton("–ó–∞–Ω—è—Ç—ã–µ —Å–ª–æ—Ç—ã", callback_data=cd.new('occupied_slots'))]
])